generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(250)  
  email     String     @unique(map: "unique-email") @db.VarChar(250)
  pass      String     @db.Text
  avatar    String     @db.Text
  sessions  session[]
  recipe   recipe[]
  favorites   favorite[]
  
}

model recipe {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(250)
  rating   Int
  image      String @db.VarChar(400)
  portions     String 
  userId    Int
  description   String
  time       String     @db.VarChar(50)
  instruction   String     @db.VarChar(400)
  ingredients String    @db.VarChar(250)
  @@index([userId], name: "idUser")
  user     user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  favorites   favorite[]
}

model favorite {
  id        Int      @id @default(autoincrement())
  recipeId Int
  userId    Int
  recipe   recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([recipeId], name: "recipeId")
  @@index([userId], name: "userId")
  @@unique([recipeId, userId], name: "unique_recipeId_userId")
}

model session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @db.VarChar(1000) @unique
  createdAt DateTime @default(now())
  user     user     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], name: "sessionUserId")
}
